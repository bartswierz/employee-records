import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import "./recordListMobile.styles.scss";
import PersonIcon from "@mui/icons-material/Person";
import { Card, CardContent, CardMedia, Typography, IconButton, CardActions, Button } from "@mui/material";
import DeleteIcon from "@mui/icons-material/Delete";
import EditIcon from "@mui/icons-material/Edit";

// The following code will serve as a viewing component for our records. It will fetch all the records in our database through a GET method.
const Record = ({ record, deleteRecord }) => {
  const { _id, name, position, level, salary } = record;
  // const { name, position, level, salary, imageUrl } = record;

  const cardSX = {
    maxWidth: 345,
    width: "100%",
    backgroundColor: "transparent",
    color: "#fff",
    borderTop: "1px solid #999",
    borderBottom: "1px solid #999",
  };

  return (
    <Card sx={cardSX}>
      {/* <CardMedia component="img" height="140" src={<PersonIcon />} alt={name} /> */}
      <CardMedia
        alt={name}
        sx={{
          width: "70%",
          height: "auto",
          margin: "0 auto",
          marginTop: "15px",
        }}
      >
        <PersonIcon sx={{ width: "100%", height: "auto", backgroundColor: "#0064fa", borderRadius: "50%" }} />
      </CardMedia>
      {/* <CardMedia component="img" sx={{ height: 200, width: 200 }} image={<PersonIcon />} alt={name} /> */}
      <CardContent
        className="employee-card-content"
        sx={{ display: "flex", flexDirection: "column", justifyContent: "center", alignItems: "center" }}
      >
        <Typography gutterBottom variant="h5" component="div" sx={{ color: "#fff" }}>
          {name}
        </Typography>
        <Typography variant="body1">Position: {position}</Typography>
        <Typography variant="body1">Level: {level}</Typography>
        <Typography variant="body1">Salary: ${salary}</Typography>
      </CardContent>
      {/* EDIT & DELETE BUTTONS */}
      {/* <CardActions sx={{ display: "flex", justifyContent: "space-between" }}> */}
      <CardActions sx={{ display: "flex", justifyContent: "space-around", paddingBottom: "20px" }}>
        <Link to={`/edit/${_id}`} style={{ width: "45%" }}>
          <Button variant="contained" endIcon={<EditIcon />} sx={{ width: "100%" }}>
            Edit
          </Button>
        </Link>
        <Button variant="outlined" startIcon={<DeleteIcon />} onClick={() => deleteRecord(record)} sx={{ width: "45%" }}>
          Delete
        </Button>
      </CardActions>
    </Card>
  );
};

export default function RecordListMobile() {
  const [records, setRecords] = useState([]);

  // This method fetches the records from the database.
  useEffect(() => {
    async function getRecords() {
      const response = await fetch(`http://localhost:5050/record/`);

      if (!response.ok) {
        const message = `An error occurred: ${response.statusText}`;
        window.alert(message);
        return;
      }

      //ARRAY OF OBJECTS FROM MONGODB {level: string, name: string, position: string, salary: number, _id: autogenerated-id}
      const records = await response.json();

      console.log("recordList - records fetched: ", records);
      setRecords(records);
    }

    getRecords();

    return;
  }, [records.length]);

  // This method will delete a record from our DB that matches passed id
  async function deleteRecord(id) {
    await fetch(`http://localhost:5050/record/${id}`, {
      method: "DELETE",
    });

    //CREATING A NEW ARRAY WITHOUT PASSED ID
    const newRecords = records.filter((record) => record._id !== id);
    setRecords(newRecords);
  }

  // This method will map out the records on the table
  function recordList() {
    return records.map((record) => {
      return <Record record={record} deleteRecord={() => deleteRecord(record._id)} key={record._id} />;
    });
  }

  // This following section will display the table with the records of individuals.
  return (
    <div className="recordlist-container">
      <h3 className="record-list-header">Employee Records</h3>
      {/* RENDER RECORD COMPONENT */}
      {recordList()}
    </div>
  );
}
